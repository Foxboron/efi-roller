efi-roller(8)
=============

Name
----
efi-roller - Roll your own EFI signing keys


Synopsis
--------
'efi-roller' <command>


Description
-----------
'efi-roller' is a very simple program to help roll your own EFI signing keys. It
will help you sign and manage EFI binaries and sign them appropriately.


EFI signing commands
--------------------
**create-keys**::
        Creates a set of signing keys used to sign EFI binaries. Currently it
        will create the following keys:
        * Platform Key
        * Key Exchange key
        * Signature Database Key

**enroll-keys**::
        It will first attempt to use linkman:efi-updatevar[1] to enroll the
        required keys. This requires User Mode, or Setup Mode, to be enabled. If
        this doesn't work, the keys will be preapred for enrollment through the
        KeyTool.efi with keys stores to ESP/keys.

**sign** <FILE>...::
        Signs a EFI binary with the created key. The file will be checked for
        valid signatures to avoid duplicates.

**sign-all**::
        Signs all enrolled EFI binaries.

**verify** <FILE>...::
        Verifies an EFI binary if it has been signed with the Signature Database
        key.

**verify-esp**::
        Looks for EFI binaries with the mime type application/x-dosexec and
        checks if they have been signed with the Signature Database Key.

**enroll** <FILE>...::
        Adds a EFI binary into the file database to be signed.

**disenroll** <FILE>...::
        Removed the EFI binary from the file database.

**help** <FILE>...::
        Displays a help message.

EFI binary commands
------------------

**bundle** [FLAG] <NAME> <VMLINUZ PATH> <INITRAMFS PATH>::
        Creates a bundle that should produce EFI binaries. This is usefull if
        you want to sign your initramfs along with your kernel.

        * -i|--intel <PATH> - Include Intel microcode
        * -a|--amd <PATH> - Include AMD microcode

**remove-bundle** <NAME>::
        Removes a bundle from the list.

**generate-bundles**::
        This command generates all bundles and puts them into
        **$ESP/Linux/linux-$bundlename.efi**. These are not signed and it's
        expected that you enroll them yourself.

**list-bundles**::
        List all registed bundles to generate.

Environment Variables
---------------------
**ESP**::
        Overrides the ESP location used for enrolling keys, and finding EFI
        binaries to sign. Defaults to /boot

**EFI_ROLLER_ROOT**::
        Override the default efi-roller location. Defaults to /var/lib/efi-roller


Files
----
**/var/lib/efi-roller**::
        Default storage directory.

**/var/lib/efi-roller/GUID**::
        Owner identification. This is a randomly generated UUID.

**/var/lib/efi-roller/files.db**::
        Contains a list of EFI binaries to be signed by the generated key.

**/var/lib/efi-roller/bundles.db**::
        Contains a list of EFI bundles to be generated.

**/var/lib/efi-roller/keys/db/DB.{auth,cer,crt,esl,key}**::
        Contains the Signature Database key used for signing EFI binaries.

**/var/lib/efi-roller/keys/kek/KEK.{auth,cer,crt,esl,key}**::
        Contains the Key Exchange Key.

**/var/lib/efi-roller/keys/pk/PK.{auth,cer,crt,esl,key}**::
        Contains the Platform Key.


See Also
--------
linkman:sbsign[1]
